<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EDC Attendance Tracker</title>
</head>
<style>
    h1{
        text-align: center;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        font-weight: bold;
        color: #0b0b82;
    }
    img{
        position: relative;
        width: 100vw;
    }
    .creation{
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .creation >button{
       
  align-items: center;
  background-color: #FFFFFF;
  border: 4px solid rgba(51, 224, 7, 0.76);
  border-radius: .25rem;
  box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;
  box-sizing: border-box;
  color: rgba(0, 0, 0, 0.85);
  cursor: pointer;
  display: inline-flex;
  font-family: system-ui,-apple-system,system-ui,"Helvetica Neue",Helvetica,Arial,sans-serif;
  font-size: 16px;
  font-weight: 600;
  justify-content: center;
  line-height: 1.25;
  margin: 0;
  min-height: 3rem;
  padding: calc(.875rem - 1px) calc(1.5rem - 1px);
  position: relative;
  text-decoration: none;
  transition: all 250ms;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  vertical-align: baseline;
  width: auto;
}


.marking{
    border: 2px solid blue;
    border-radius: 5px;
    padding: 10vw 10vw 10vw 10vw;
   

}
#attendance-form {
    max-width: 300px;
    margin: 50px auto;
    padding: 10px;
    background-color: whitesmoke;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
    font-family: Arial, sans-serif;
}

#name-input {
    width: 80%;
    padding: 20px;
    margin-bottom: 15px;
    margin-top: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
}

#mark-attendance-btn {
    width: 100%;
    padding: 10px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
}

#mark-attendance-btn:hover {
    background-color: #45a049;
}
#location-display {
    margin-top: 20px;
    padding: 15px;
    background-color: #f1f1f1;
    border-top: 1px solid #ddd;
    text-align: center;
    font-family: Arial, sans-serif;
    color: #333;
    
    
    width: 100%;
}

#location-display p {
    margin: 5px 0;
    font-size: 14px;
}

#location-display span {
    font-weight: bold;
}

</style>
<body>
    


    <div>
        <img src="/images/logo.png" alt="EDC Logo" />
        <h1>EDC Attendance Tracker</h1>
        <% if (user && user.displayName) { %>
            <h1>Hello, <%= user.displayName %></h1>
        <% } else { %>
            <h1>Hello, Guest</h1>
        <% } %>
    </div>
    
    
<hr>

    <div class="creation">
        <button id="create-meet-btn">Create EDC Meet</button>
        <button id="end-meet-btn" style="display: none;">End Meet</button>
    </div>
    <br>
    <br>
    
    <div class="marking">
        <form id="attendance-form">
            <!-- <input type="text" id="name-input" placeholder="Enter Name to Mark Attendance"> -->
            <button id="mark-attendance-btn">Mark Attendance</button>
        </form>
    </div>

    <div id="location-display" style="margin-top: 20px;">
        <p>Latitude: <span id="latitude"></span></p>
        <p>Longitude: <span id="longitude"></span></p>
        <p>Made with &#9829; by Harsh Ranjan</p>
    </div>

    <script>
        // Function to update the displayed latitude and longitude
        function updateLocationDisplay(latitude, longitude) {
            document.getElementById('latitude').textContent = latitude;
            document.getElementById('longitude').textContent = longitude;
        }

        // Function to get the current position and update the location display
        function getLocationAndUpdateDisplay() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(position => {
                    const { latitude, longitude } = position.coords;
                    updateLocationDisplay(latitude, longitude);
                }, 
                error => {
                    console.error("Error getting location:", error);
                }, 
                {
                    enableHighAccuracy: true,
                    maximumAge: 0,
                    timeout: 5000
                });
            } else {
                alert("Geolocation is not supported by your browser.");
            }
        }

        // Initial location update
        getLocationAndUpdateDisplay();
        const userName = "<%= user.displayName %>";

        // Update the location every 30 seconds (30000 milliseconds)
        setInterval(getLocationAndUpdateDisplay, 30000);

        document.getElementById('create-meet-btn').addEventListener('click', () => {
            navigator.geolocation.getCurrentPosition(position => {
                const { latitude, longitude } = position.coords;
                fetch('/create-meet', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `latitude=${latitude}&longitude=${longitude}`
                }).then(response => response.json()).then(data => {
                    if (data.success) {
                        // Disable button for all users
                        document.getElementById('create-meet-btn').style.display = 'none';
                        document.getElementById('end-meet-btn').style.display = 'block';
                    } else {
                        alert(data.message);
                    }
                });
            });
        });

        document.getElementById('mark-attendance-btn').addEventListener('click', (e) => {
            e.preventDefault();
            const name = userName;

            navigator.geolocation.getCurrentPosition(position => {
                const { latitude, longitude } = position.coords;
                fetch('/mark-attendance', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `name=${name}&latitude=${latitude}&longitude=${longitude}`
                }).then(response => response.json()).then(data => {
                    if (data.success) {
                        alert('Attendance marked!');
                    } else {
                        alert(data.message);
                    }
                });
            });
        });

        document.getElementById('end-meet-btn').addEventListener('click', () => {
            fetch('/end-meet', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
            }).then(response => response.json()).then(data => {
                if (data.success) {
                    alert('Meet ended. Attendance email sent.');
                    document.getElementById('create-meet-btn').style.display = 'block';
                    document.getElementById('end-meet-btn').style.display = 'none';
                } else {
                    alert(data.message);
                }
            });
        });
    </script>
</body>
</html>
